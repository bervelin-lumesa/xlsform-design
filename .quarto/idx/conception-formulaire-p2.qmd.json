{"title":"Conception du formulaire : partie 2","markdown":{"headingText":"Conception du formulaire : partie 2","containsRefs":false,"markdown":"\n## Attributs des variables\n\nUn attribut de variable est une caractéristique qui décrit ou définit un comportement spécifique pour une variable. Il peut s'agir de rendre une question oblligatoire, de modifier son affichage, de la répéter un certain nombre de fois, et bien d'autres.\n\n| Attributs          | Utilité                                         |\n|--------------------|-------------------------------------------------|\n| hint               | Ajouter un petit texte en bas de la question    |\n| required           | Rendre une question obligatoire (yes)           |\n| constraint         | Imposer une contrainte à une question           |\n| constraint_message | Afficher un message pour la contrainte          |\n| relevant           | Effectuer un saut                               |\n| calculation        | Effectuer un calcul                             |\n| default            | Définir une valeur par défaut pour une question |\n| appearance         | Gérer l'apparence de questions sur l'écran      |\n| repeat_count       | Répéter une question un certain nombre de fois  |\n\n: Les attributs de variables\n\nDans ce qui suit, nous allons voir comment mettre des sauts et contraintes dans un formulaire. Mais avant, voyons quelques opérateurs logiques et relationnels.\n\n## Opérateurs logiques et relationnels\n\nCes opérateurs nous permettent d'écrire nos différentes conditions (contraintes et sauts).\n\n| Opérateurs logiques et relationnels | Signification             |\n|-------------------------------------|---------------------------|\n| and                                 | et logique                |\n| or                                  | ou logique                |\n| \\>                                  | supérieur à               |\n| \\>=                                 | supérieur ou égal à       |\n| \\<                                  | inférieur à               |\n| \\<=                                 | inférieur ou égal à       |\n| =                                   | égalité logique (égal à)  |\n| !=                                  | pas égal à (différent de) |\n\n: Opérateurs logiques et relationnels\n\n## Sauts et contraintes\n\nPour faire référence à une variable dans XLSForm, nous utilisons le signe dollar (\\$) suivi des parentahèses ourverte et fermée, à l'interieur desquelles vous mettez le nom de la variable, comme suit : \\${nom_de_la_variable}. Mais lorsque nous sommes sur la ligne d'une variable donnée, nous pouvons faire référence à celle-ci par un simple point (.).\n\n### Sauts\n\nUn saut est une instruction qui permet de sauter une ou plusieurs questions dans le formulaire. Dans un questionnaire papier, il correspond à l'instrution du genre \"Si Q100 égal à Oui, allez à Q102\". Dans un formulaire XLSForm, il correspond à une instruction à mettre sur la ligne de la question qu'on veut sauter. De cette façon, la question à sauter sera affichée si la condition est vérifiée.\n\nDans cet exemple, la question sur le nombre de mois de grossesse ne s'affiche à l'écran que si la femme a dit qu'elle est enceinte (\"oui\").\n\n| type                   | name       | label                                    | relevant            |\n|----------------|----------------|------------------------|----------------|\n| select_one ouinon_list | grossesse  | Etes-vous enceinte ?                     |                     |\n| integer                | num_mois   | De combien de mois est votre grossesse ? | \\${grossesse}=\"oui\" |\n| select_one ouinon_list | partenaire | Vivez vous avec votre partenaire ?       |                     |\n\n: Saut - feuile survey\n\nIci, la question sur les réseaux s'affiche quand il y a \"oui\" à la première question. Ensuite, la question du numéro vodacom ne s'affiche que si \"vodacom\" a été choisi dans la question sur les réseaux téléphoniques. Rémarquez la différence dans l'écriture du saut entre une question à réponse unique et à réponse multiple.\n\n| type                        | name     | label                                        | relevant                        |\n|-----------------|-----------------|-----------------------|-----------------|\n| select_one ouinon_list      | tel      | Avez-vous un téléphone ?                     |                                 |\n| select_multiple reseau_list | reseau   | Quels réseaux téléphoninques utilisez-vous ? | \\${tel}=\"oui\"                   |\n| integer                     | num_voda | Quel est votre numéro vodacom ?              | selected(\\${reseau}, \"vodacom\") |\n\n: Saut (2) - feuile survey\n\n### Contraintes\n\nImposer une contrainte à une variable, c'est restreindre celle-ci à être égale à une valeure donnée ou un intervalle de valeurs. Lorsqu'il y a une contrainte sur une variable, la condition de cette contrainte doit être remplie pour pouvoir continuer le remplissage du formulaire. Dans l'exemple suivant par exemple, tant que la valeur saisie pour l'âge est inférieure à 18 ou supérieure à 99, on ne peut pas aller au champ suivant.\n\n| type    | name  | label                                              | constraint                     |\n|---------------|---------------|---------------------------|---------------|\n| integer | age   | Quel est votre âge ?                               | \\${age}\\>=18 and \\${age} \\<=99 |\n| decimal | poids | Combien a pésé votre enfant à la dernière visite ? | .\\>=1 and .\\<=10               |\n\n: Contrainte - feuille survey\n\n## Groupe\n\nPermet de regrouper un ensemble de questions. Il sert à :\n\n-   afficher plusieurs questions sur le même écran\n\n-   appliquer un saut à un ensemeble de questions\n\nLe libellé du groupe est visible pour toutes les questions du groupe. Un groupe peut contenir un autre groupe\n\nSi nous voulons afficher plusieurs quesions sur le même écran, il suffit de mettre le mot `field-list` dans la cellule croisant la ligne de la déclaration du groupe et la colonne`appearance`. On définit le groupe avec les mots `begin_group` et `end_group` comme le montre la figure suivante :\n\n![déclaration du groupe](images/groupe.PNG)\n\nLes tableaux suivants donnent un exemple de l'utilisation de groupe.\n\n| type                  | name     | label              |\n|-----------------------|----------|--------------------|\n| **begin_group**       | group_1  | Identification     |\n| select_one prov_list  | province | Nom de la province |\n| select_one ville_list | ville    | Nom de la ville    |\n| select_one comm_list  | commune  | Nom de la commune  |\n| **end_group**         |          |                    |\n\n: groupe - feuille survey\n\nEn ajoutant `field-list`, on peut afficher ces trois questions sur le même écran.\n\n| type                  | name     | label              | appearance |\n|-----------------------|----------|--------------------|------------|\n| **begin_group**       | group_1  | Identification     | field-list |\n| select_one prov_list  | province | Nom de la province |            |\n| select_one ville_list | ville    | Nom de la ville    |            |\n| select_one comm_list  | commune  | Nom de la commune  |            |\n| **end_group**         |          |                    |            |\n\n: groupe avec field-list\n\n## Répétition\n\nPermet de répéter une ou plusieurs questions un certain nombre de fois. La répétition peut être utilisée lorsque vous voulez collecter les données sur plusieurs individus au sein d'une même unité statistiques et que le nombre de ces individus varie d'une unité à l'autre.\n\nExemple :\n\n-   obtenir des informations sur chaque moustiquaire dans un ménage, le nombre de moustiquaires étant différent d'un ménage à l'autre.\n\n-   obtenir des informations sur les membres du ménage dans une enquête ménage.\n\nLe nombre de répétition peut être précisé sur la colonne `repeat_count`.\n\nOn définit le groupe avec les mots `begin_repeat` et `end_repeat` comme le montre la figure suivante :\n\n![déclaration de la répétition](images/repetition.PNG)\n\nLes tableaux suivants montre comment la répétition peut être utilisée.\n\n| type                 | name  | label               |\n|----------------------|-------|---------------------|\n| **begin_repeat**     | rep_1 | Membres du ménage   |\n| text                 | nom   | Nom de la personne  |\n| integer              | age   | Age de la personne  |\n| select_one sexe_list | sexe  | Sexe de la personne |\n| **end_repeat**       |       |                     |\n\n: Répétition - feuille survey\n\nDans ce cas, au début de chaque répétition un message nous demandera si nous voulons ajouter une répétition. On met fin à la répétion en répondant non à ce message.\n\nIl est aussi possible de préciser à l'avance le nombre de fois que les questions de la répétition vont se répéter. Pour cela, on utilise le nom de la variable qui définit le nombre de répétition dans la cellule entre la ligne de la déclaration de la répétition et la colonne `repeat_count`. Le tableau suivant en montre un exemple.\n\n| type                 | name        | label               | repeat_count    |\n|----------------------|-------------|---------------------|-----------------|\n| integer              | nb_personne | Nombre de personnes |                 |\n| **begin_repeat**     | rep_1       | Membres du ménage   | \\${nb_personne} |\n| text                 | nom         | Nom de la personne  |                 |\n| integer              | age         | Age de la personne  |                 |\n| select_one sexe_list | sexe        | Sexe de la personne |                 |\n| **end_repeat**       |             |                     |                 |\n\n: répétition avec repeat_count - feuille survey\n\nDans cet exemple, les trois dans la répétition vont se répétition selon la valeur saisie dans la variable `nb_personne`.\n\n## Sélection en cascade\n\nLa sélection consiste à faire plusieurs choix sur une liste imbriquée.\n\nIl peut s'agir de la sélection successive d'une province, ville, commune, quartier, etc. La sélection en cascade permet alors de filtrer les unités secondaires en fonction des choix précédents, affichant ainsi les villes de la province séléctionnée, les communes de la ville sélectionnée, les quartiers de la commune sélectionnée, etc.\n\nAvec XLSForm, on utilse la colonne 'choice_filter' sur la feuille `survey` pour effectuer le filtre. Sur la feuille `choices`, on ajoute une colonne dans laquelle les unités primaires en fonction des unités secondaires. Les choses pourront être plus claires avec un exemple.\n\nDans cet exemple, nous filtrons les villes en fonction de la province et les communes en fonction de la ville.\n\n| type1                 | name     | label              | choice_filter         |\n|-------------------|-----------------|-----------------|-------------------|\n| select_one prov_list  | province | Nom de la province |                       |\n| select_one ville_list | ville    | Nom de la ville    | filtre = \\${province} |\n| select_one comm_list  | commune  | Nom de la commune  | filtre = \\${ville}    |\n\n: sélection en cascade - feuille survey\n\n| list_name  | name | label        | filtre |\n|------------|------|--------------|--------|\n| prov_list  | 10   | Kinshasa     |        |\n| prov_list  | 20   | Haut-Katanga |        |\n|            |      |              |        |\n| ville_list | 101  | Kinshasa     | 10     |\n| ville_list | 201  | Lubumbashi   | 20     |\n|            |      |              |        |\n| comm_list  | 1011 | Ngaliema     | 101    |\n| comm_list  | 2011 | Kamalondo    | 201    |\n\n: sélection en cascade - feuille choices\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"conception-formulaire-p2.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.335","bibliography":["references.bib"],"editor":"visual","theme":"united","logo":"images/logo-white.png"},"extensions":{"book":{"multiFile":true}}},"pdf":{"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","output-file":"conception-formulaire-p2.pdf"},"language":{},"metadata":{"block-headings":true,"bibliography":["references.bib"],"editor":"visual","documentclass":"scrreprt"},"extensions":{"book":{}}}}}